{
  "getAllPosts": "SELECT posts.id,  posts.author_id, x.reply_count, posts.title,  posts.category_id, users.username as author_name, categories.name as category_name FROM posts INNER JOIN users ON users.id=posts.author_id INNER JOIN categories on posts.category_id=categories.id LEFT JOIN (SELECT replies.post_id, COUNT(*) as reply_count FROM replies GROUP BY replies.post_id) x ON x.post_id=posts.id",
  "getPostsByCategory": "SELECT posts.id,  posts.author_id, x.reply_count,  posts.title,  posts.category_id, users.username as author_name, categories.name as category_name FROM posts INNER JOIN users ON users.id=posts.author_id INNER JOIN categories on posts.category_id=categories.id LEFT JOIN (SELECT replies.post_id, COUNT(*) as reply_count FROM replies GROUP BY replies.post_id) x ON x.post_id=posts.id",
  "getReplies": "SELECT replies.id, replies.post_id, replies.author_id, replies.text, users.username as author_name FROM replies LEFT JOIN posts ON posts.id=post_id INNER JOIN users ON replies.author_id=users.id WHERE post_id={id}",
  "getPost": "SELECT * FROM posts WHERE id={id}",
  "getCategories": "SELECT * FROM categories",
  "checkPostExists": "SELECT * FROM posts WHERE trim(title)=? AND trim(category_id)=?",
  "addPost": "INSERT INTO posts (author_id, title, category_id) VALUES (?, ?, ?)",
  "addReply": "INSERT INTO replies (author_id, text, post_id) VALUES (?, ?, ?)",
  "getReplyCount": "SELECT post_id, COUNT(*) FROM replies GROUP BY post_id"
}
<div id="selectedTheme">
    <div>
    {{#if replies}}
        <span><a id='byTime' {{#is sortTag 'byTime' }} href="?sortTag=byTimeAsc" {{else}} href="?sortTag=byTime" {{/is}}
                 class="colorMedium hoverColorAccent sortLink">По времени <span class="sortLinkArrow"
                                                                                id="byTimeSortLink">&nbsp;</span></a></span>
        <span><a id='byReplies' {{#is sortTag 'byReplies' }} href="?sortTag=byRepliesAsc" {{else}}
                 href="?sortTag=byReplies" {{/is}} class="colorMedium hoverColorAccent sortLink">По ответам
                <span class="sortLinkArrow" id="byRepliesSortLink">&nbsp;</span></a></span>
        <span><a id="byLastReply" {{#is sortTag 'byLastReply' }} href="?sortTag=byLastReplyAsc" {{else}}
                 href="?sortTag=byLastReply" {{/is}} class=" colorMedium hoverColorAccent sortLink">По последнему ответу
                <span class="sortLinkArrow" id="byLastReplySortLink">&nbsp;</span></a></span>
    </div>


    <a class="left marginButton colorHoverButton" href="{{from}}"><img src="/static/images/back.svg" height="40"
                                                                   alt="Назад"></a>

    <div class="bgWhite roundBorder postTitle">
        <h3 class="textTitle left">
            {{post.title}}
        </h3>
        <div class="right vertAlignItemsMid">
            <img src="/static/images/icons/chat.svg" alt="" class="inlineBlock" style="width: 15px;">
            {{#if post.reply_count}}
                {{post.reply_count}}
            {{else}}
                0
            {{/if}}</div>
        <div class="clearFix"></div>

    </div>
    <div class="clearFix"></div>

    <ul id="ulReplies" class="noMarginTop noUlDefaultPadding noUlDecor bgWhite roundBorder">
        {{#each replies}}
            <li class="relative liPadding" id="reply_{{this.id}}">

                <div class="postMain">
                    <div class="left widthRegulate">
                        <p class="noMarginTop colorMedium">
                            {{this.text}}
                        </p>
                    </div>

                    <div class="right   voteField">
                        {{#eq ../user.username this.author_name}}
                        {{else}}
                            {{#if ../user}}
                                <form action="/vote/{{this.id}}/1?from={{../from}}" method="post">
                                <input type="image" class="vote" src="/static/images/like.svg" alt="#"/>
                                </form>
                                <form action="/vote/{{this.id}}/-1?from={{../from}}" method="post">
                                <input type="image" class="vote" src="/static/images/dislike.svg" alt="#"/>
                                </form>
                            {{/if}}

                            <div class="voteCounter">{{#if this.rating }}
                                {{#gt this.rating 0 }}
                                    <span style="color: darkgreen">{{this.rating}}</span>
                                {{else}}
                                    <span style="color: darkred">{{this.rating}}</span>
                                {{/gt}}
                            {{else}}
                                0
                            {{/if}}
                            </div>
                        {{/eq}}
                    </div>
                </div>

                <footer class="vertAlignItemsMid">
                    <div class="left">
                        <img {{#if this.author_name}} src="https://api.adorable.io/avatars/128/{{this.author_name}}.png"
                        {{else}}
                                                      src="https://avatars.mds.yandex.net/get-znatoki/1368855/2a0000016cc1fb6175fa439bc6ab108427ae/w480"
                        {{/if}} class='roundImg smallAvatar inlineBlock' alt="">
                        <div class="inlineBlock colorMedium">{{#if this.author_name}}
                            <span class="colorAccent">{{this.author_name}}</span>
                        {{else}}
                            <span class="colorDarker">Удален</span>
                        {{/if}} ответил {{this.time_since_creation}}
                        </div>
                    </div>
                    {{#eq this.author_id ../user.id}}

                    <div class="right">
                        <a onclick="showDropdown('postActionsList{{this.id}}');">
                            <img src="/static/images/icons/more.svg" style="width: 15px; padding: 5px" alt="">
                        </a>
                        &nbsp;
                    </div>
                    <div class="clearFix"></div>
                </footer>
                    <div id="dropdownArea postActionsList{{this.id}}" class="dropdownArea dropdownArea postActionsList hidden relative">
                        <ul id="postActionsList{{this.id}}" class="postActionsList menuList roundBorder shadowed1 hidden">
                            <li>
                                <a
                                        onclick="showPopup('editPostPopup'); editPost({{this.id}}, {{this.category_id}}, '{{this.title}}')">Редактировать</a>
                            </li>
                            <li><a class="colorTextDanger" onclick="deletePost({{this.id}})">Удалить</a></li>
                        </ul>
                    </div>
                {{else}}
                    <div class="clearFix"></div>
                {{/eq}}
            </li>



        {{/each}}
    </ul>
    {{/if}}
    {{#if user}}
    {{else}}
        <p class="colorTextDark">Войдите или зарегистрируйтесь, чтобы ответить</p>
    {{/if}}
</div>
{{#if user}}
    {{>replyForm}}
{{/if}}


<script>
    let box1 = document.getElementById('logInForm'), box2 = document.getElementById('signUpForm'),
            box3 = document.getElementById('postCreation'),
            box4 = document.getElementById('replyChange');
    window.onclick = function (event) {
        if (event.target === box1) {
            box1.style.display = 'none';
        } else if (event.target === box2) {
            box2.style.display = 'none';
        } else if (event.target === box3) {
            box3.style.display = 'none';
        } else if (event.target === box4) {
            box4.style.display = 'none';
        }
    }

    const deleteReply = (id) => {
        let post = {
            id: id
        };
        fetch('/delete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(post)
        }).then(() => {
            location.reload();
        });
    }
    const editReply = (id, text) => {
        document.getElementById('editReply').value = text;
        document.getElementById('editReply').focus();
        document.getElementById('sendReply').onsubmit = async (e) => {
            e.preventDefault();
            let post = {
                id: id,
                text: document.getElementById('sendReply').replyEdition.value
            }
            fetch('/edit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(post)
            }).then(() => {
                location.reload();
            });
        };
    }
    if ('{{sortTag}}'.endsWith('Asc')) {
        const sortLinkId = '{{sortTag}}'.replace('Asc', '')
        document.getElementById(sortLinkId).classList.add('visitedColor');
        document.getElementById(sortLinkId + 'SortLink').innerHTML = "↑";
    } else {
        const sortLinkId = '{{sortTag}}';
        document.getElementById(sortLinkId).classList.add('visitedColor');
        document.getElementById(sortLinkId + 'SortLink').innerHTML = "↓";
    }
    /* const menus = document.querySelectorAll('.menuList')

    document.addEventListener("click", function (e) {
        list.classList.add('hidden');
        menus.forEach(m => m.classList.add('hidden'))
    });
    const showMenu = id => {
        document.getElementById(id).classList.remove('hidden');
    } */
    const dropdownAreas = document.querySelectorAll('.dropdownArea')

    dropdownAreas.forEach(a => {
        a.onmouseleave = () => {
            a.classList.toggle('hidden')
            document.getElementById(a.id.replace('dropdownArea', '')).classList.toggle('hidden')
            document.getElementById(a.id.replace('dropdownArea', '') + 'Btn').blur()
        }
    })
    const showDropdown = id => {

        document.getElementById(id).classList.toggle('hidden')
        document.getElementById('dropdownArea' + id).classList.toggle('hidden')
    }
</script>

<div id="selectedTheme">
    <div>
        {{#if posts}}
        <span><a id='byTime' {{#is sortTag 'byTime' }} href="?sortTag=byTimeAsc" {{else}} href="?sortTag=byTime" {{/is}}
                class="colorMedium hoverColorAccent sortLink">По времени <span class="sortLinkArrow"
                    id="byTimeSortLink">&nbsp;</span></a></span>
        <span><a id='byReplies' {{#is sortTag 'byReplies' }} href="?sortTag=byRepliesAsc" {{else}}
                href="?sortTag=byReplies" {{/is}} class="colorMedium hoverColorAccent sortLink">По ответам
                <span class="sortLinkArrow" id="byRepliesSortLink">&nbsp;</span></a></span>
        <span><a id="byLastReply" {{#is sortTag 'byLastReply' }} href="?sortTag=byLastReplyAsc" {{else}}
                href="?sortTag=byLastReply" {{/is}} class=" colorMedium hoverColorAccent sortLink">По последнему ответу
                <span class="sortLinkArrow" id="byLastReplySortLink">&nbsp;</span></a></span>
    </div>
    <ul id="ulPosts" class="noUlDefaultPadding noUlDecor bgWhite roundBorder">
        {{#each posts}}
        <li class="relative">
            <a href="/post/{{this.id}}?from={{../currentPath}}">
                <header>
                    <h3 class="left colorDark">
                        {{this.title}}
                    </h3>
                    <div class="right vertAlignItemsMid">
                        <img src="/static/images/icons/chat.svg" alt="" class="inlineBlock" style="width: 15px;">
                        {{#if this.reply_count}}
                        {{this.reply_count}}
                        {{else}}
                        0
                        {{/if}}</div>
                    <div class="clearFix"></div>
                </header>
                <div class="postMain">
                    <p class="firstReplyPreviewText colorMedium">
                        {{#if this.first_reply}}
                        {{this.first_reply.text}}
                        {{else}}
                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quod ...
                        {{/if}}
                    </p>
                </div>
            </a>

            <footer class="vertAlignItemsMid">
                <div class="left">
                    <img {{#if this.author_name}} src="https://api.adorable.io/avatars/128/{{this.author_name}}.png"
                        {{else}}
                        src="https://avatars.mds.yandex.net/get-znatoki/1368855/2a0000016cc1fb6175fa439bc6ab108427ae/w480"
                        {{/if}} class='roundImg smallAvatar inlineBlock' alt="">
                    <div class="inlineBlock colorMedium">{{#if this.author_name}}
                        <span class="colorAccent">{{this.author_name}}</span>
                        {{else}}
                        <span class="colorDarker">Удален</span>
                        {{/if}} создал {{this.time_since_creation}}
                    </div>
                </div>
                {{#eq this.author_id ../user.id}}

                <div class="right">
                    <a onclick="showDropdown('postActionsList{{this.id}}');">
                        <img src="/static/images/icons/more.svg" style="width: 15px; padding: 5px" alt="">
                    </a>
                    &nbsp;
                </div>
                <div class="clearFix"></div>
            </footer>
            <div id="dropdownAreapostActionsList{{this.id}}" class="dropdownArea dropdownAreapostActionsList hidden relative">
                <ul id="postActionsList{{this.id}}" class="postActionsList menuList roundBorder shadowed1 hidden">
                    <li>
                        <a
                            onclick="showPopup('editPostPopup'); editPost({{this.id}}, {{this.category_id}}, '{{this.title}}')">Редактировать</a>
                    </li>
                    <li><a class="colorTextDanger" onclick="deletePost({{this.id}})">Удалить</a></li>
                </ul>
            </div>
            {{else}}
            <div class="clearFix"></div>
            {{/eq}}
        </li>
        {{/each}}
    </ul>
    {{else}}
    {{#if category}}
    <div class="colorMedium">Нет постов.
        {{#if user}}
        <a onclick="showPopup('createPostPopup')" href="#">Создайте пост</a> или
        <form action="/category/delete/{{category}}" method="post" class="inlineBlock">
            <input type="submit" value="удалите категорию" class="bigBtn bgDanger roundBorder hoverBgSpecial">
        </form>
    </div>
    {{else}}
    <p class="colorMedium">Войдите или зарегистрируйтесь, чтобы создать пост</p>
    {{/if}}
    {{else}}
    <p class="colorMedium">Нет постов.
        {{#if user}}
        <a onclick="showPopup('createPostPopup')" href="#">Создайте пост</a>
    </p>
    {{else}}
    <p class="colorMedium">Войдите или зарегистрируйтесь, чтобы создать пост</p>
    {{/if}}
    {{/if}}
    {{/if}}
</div>
<script>
    let box1 = document.getElementById('logInForm'), box2 = document.getElementById('signUpForm'),
        box3 = document.getElementById('postCreation'),
        box4 = document.getElementById('postChange');
    window.onclick = function (event) {
        if (event.target === box1) {
            box1.style.display = 'none';
        } else if (event.target === box2) {
            box2.style.display = 'none';
        } else if (event.target === box3) {
            box3.style.display = 'none';
        } else if (event.target === box4) {
            box4.style.display = 'none';
        }
    }

    const deletePost = (id) => {
        let post = {
            id: id
        };
        fetch('/post/delete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(post)
        }).then(() => {
            location.reload();
        });
    }
    const editPost = (id, category, text) => {
        document.getElementById('editPost').value = text;
        document.getElementById('editPost').focus()
        document.getElementById('sendEdition').onsubmit = async (e) => {
            e.preventDefault();
            let post = {
                id: id,
                category: category,
                text: document.getElementById('sendEdition').edition.value
            }
            fetch('/post/edit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json;charset=utf-8'
                },
                body: JSON.stringify(post)
            }).then((res) => {
                if (res.ok) {
                    location.reload();
                } else {
                    location.href = '/category/myPosts?postFail=true`';
                }
            });
        };
    }
    if ('{{sortTag}}'.endsWith('Asc')) {
        const sortLinkId = '{{sortTag}}'.replace('Asc', '')
        document.getElementById(sortLinkId).classList.add('visitedColor');
        document.getElementById(sortLinkId + 'SortLink').innerHTML = "↑";
    } else {
        const sortLinkId = '{{sortTag}}';
        document.getElementById(sortLinkId).classList.add('visitedColor');
        document.getElementById(sortLinkId + 'SortLink').innerHTML = "↓";
    }
    /* const menus = document.querySelectorAll('.menuList')

    document.addEventListener("click", function (e) {
        list.classList.add('hidden');
        menus.forEach(m => m.classList.add('hidden'))
    });
    const showMenu = id => {
        document.getElementById(id).classList.remove('hidden');
    } */
    const dropdownAreas = document.querySelectorAll('.dropdownArea')

    dropdownAreas.forEach(a => {
        a.onmouseleave = () => {
            a.classList.toggle('hidden')
            document.getElementById(a.id.replace('dropdownArea', '')).classList.toggle('hidden')
            document.getElementById(a.id.replace('dropdownArea', '') + 'Btn').blur()
        }
    })
    const showDropdown = id => {
        document.getElementById(id).classList.toggle('hidden')
        document.getElementById('dropdownArea' + id).classList.toggle('hidden')
    }
</script>